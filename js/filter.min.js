jQuery(document).ready(function () {
  function fetchFilteredData(requestData, actionType) {
    $(".loading").css("display", "flex");
    $(".load_more_btn").find(".moreInfo").text("Loading...");

    $.ajax({
      type: "POST",
      url: "/filter_update",
      data: requestData,
      success: function (response) {
        const matchPattern = /(casino-card)/g;
        const matches = response.match(matchPattern);

        console.log(matches);

        if (!matches || matches.length === 0) {
          $(".loading").hide();
          $(".load_more_btn").hide();
        }

        if (actionType === "replace") {
          $(".loading").css("top", "0");
          $(".load_more_btn").show().attr("data-page", "1");
          $("#replace").html(response);

          if (!matches || matches.length < 12) {
            $(".load_more_btn").hide();
          }
        } else if (actionType === "add") {
          $(".loading").css("bottom", "0");
          let currentPage = Number($(".load_more_btn").attr("data-page")) || 1;
          currentPage++;

          if (!matches || matches.length < 12) {
            $(".load_more_btn").hide();
          }

          $(".load_more_btn").attr("data-page", currentPage);
          $("#replace").append(response);
        }

        $(".loading").hide();
        $(".load_more_btn").find(".moreInfo").text("Load More");
      },
      error: function (error) {
        console.log("An error occurred.", error);
      },
    });
  }

  function addFilter(filterID, filterType) {
    if (["usstates", "countries", "deposit_methods", "currencies", "games", "popular"].includes(filterType)) {
      filters[filterType].push(filterID);
      fetchFilteredData(filters, "replace");
    }
  }

  function removeFilter(filterID, filterType) {
    if (filters.hasOwnProperty(filterType)) {
      const index = filters[filterType].indexOf(filterID);
      if (index > -1) {
        filters[filterType].splice(index, 1);
        fetchFilteredData(filters, "replace");
      }
    }
  }

  let filters = {
    page: 0,
    countries: [],
    usstates: [],
    games: [],
    deposit_methods: [],
    currencies: [],
    popular: [],
    lang: "en",
  };

  // Initialize selected filters
  $(".current_selections")
    .find("input")
    .each(function () {
      const filterType = $(this).attr("data-ind");
      const filterID = $(this).attr("id");

      if (["usstates", "countries", "deposit_methods", "currencies", "games"].includes(filterType)) {
        filters[filterType].push(filterID);
      }
    });

  let filterCounter = 1;

  // Handle checkbox selection in #addFilterSection
  $("#addFilterSection").on("click", "input[type=checkbox]", function () {
    console.log("Clicked filter checkbox");

    const checkbox = $(this);
    const filterType = checkbox.attr("data-ind");
    const filterName = checkbox.attr("data-name");
    const filterID = checkbox.attr("data-id");

    filters.page = 0;

    if (checkbox.prop("checked")) {
      checkbox.prop("checked", true);

      let newFilter = `
        <label class="inputbox">
          <span class="name">${filterName}</span>
          <input class="selectedInputs" type="checkbox" data-id="${filterID}" data-name="${filterName}" value="${filterID}" data-ind="${filterType}" checked>
          <span class="checkmark"></span>
        </label>`;

      $(".selected").find(".current_selections").append(newFilter);
      addFilter(filterID, filterType);
      filterCounter++;
      $("#filterCounter").html(filterCounter);
    } else {
      console.log("Removing filter");
      removeFilter(filterID, filterType);
      filterCounter--;
      $("#filterCounter").html(filterCounter);

      $(".selected").mouseup(function () {
        $(this).find(`[data-id="${filterID}"]`).parent().remove();
      });
    }
  });

  // Handle filter removal in #selectedFilters
  $("#selectedFilters").on("click", "input[type=checkbox]", function () {
    const filterType = $(this).attr("data-ind");
    const filterID = $(this).attr("data-id");

    $(this).prop("checked", false);
    $("#get_filter").find(`#${filterID}`).prop("checked", false);

    setTimeout(() => {
      $(this).parent().remove();
    }, 10);

    removeFilter(filterID, filterType);
    filterCounter--;
    $("#filterCounter").html(filterCounter);
  });

  // Load More Button Click
  $(".load_more_btn").on("click", function () {
    console.log("Load more clicked");
    filters.page = $(this).attr("data-page");
    filters.lang = $(this).attr("data-lang");
    fetchFilteredData(filters, "add");
  });

  // Search filter function
  $(document).on("keyup", ".my-textbox", function () {
    const searchValue = $(this).val();
    const regex = new RegExp("^" + searchValue, "i");

    $(this)
      .parent()
      .parent()
      .find(".filter")
      .each(function () {
        if (searchValue === "") {
          $(this).parent().parent().find(".popSelection").show();
          $(this).hide();
        } else {
          const match = regex.test($(".name", this).text());
          $(this).toggle(match);
          $(this).parent().parent().find(".popSelection").hide();
        }
      });
  });
});
